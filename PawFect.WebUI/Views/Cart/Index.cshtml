@model CartModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="tr">
@await Component.InvokeAsync("_HeadLayout")
<body>
    @await Component.InvokeAsync("_SvgLayout")
    <partial name="_navbar" />
    <div class="py-5">
        <div class="container-fluid">
            <div class="col-md-12">
                <div class="row">
                    <h1>Cart</h1>
                    <div class="row">
                        <div class="col-md-8">
                            @if (Model.CartItems.Count > 0)
                            {
                                <div class="text-center">
                                    <h2 class="mb-4">Cart Items</h2>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Image</th>
                                                    <th scope="col">Product Name</th>
                                                    <th scope="col">Price</th>
                                                    <th scope="col">Quantity</th>
                                                    <th scope="col">Total</th>
                                                    <th scope="col">Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CartItems)
                                                {
                                                    <tr>
                                                        <th scope="row"><img src="~/img/@item.Image" width="80" /></th>
                                                        <td>@item.Name</td>
                                                        <td>@item.Price</td>
                                                        <td>
                                                            <input type="number" name="quantity" value="@item.Quantity" min="1" step="1" class="form-control quantity" data-product-id="@item.ProductId" />
                                                        </td>
                                                        <td class="total-price" data-product-id="@item.ProductId">@((@item.Quantity * item.Price).ToString("c", System.Globalization.CultureInfo.GetCultureInfo("tr-TR")))</td>
                                                        <td>
                                                            <form asp-controller="Cart" asp-action="DeleteFromCart" method="POST" style="display:inline">
                                                                <input type="hidden" name="productId" value="@item.ProductId" />
                                                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirmDelete();">
                                                                    <i class="fa fa-times fa-fw"></i>
                                                                </button>
                                                            </form>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <h4>No Product in Cart</h4>
                                </div>
                            }
                        </div>
                        <div class="col-md-4">
                            @if (Model.CartItems.Count > 0)
                            {
                                <div class="text-center">
                                    <h2 class="mb-4">Cart Summary</h2>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Cart Total</th>
                                                    <th id="cart-total">@Model.TotalPrice().ToString("c", System.Globalization.CultureInfo.GetCultureInfo("tr-TR"))</th>
                                                </tr>
                                                <tr>
                                                    <th>Shipping</th>
                                                    <th>Free</th>
                                                </tr>
                                                <tr>
                                                    <th><strong id="name"> Order Total</strong></th>
                                                    <th><strong id="order-total">@Model.TotalPrice().ToString("c", System.Globalization.CultureInfo.GetCultureInfo("tr-TR"))</strong></th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </div>
                                    <div>
                                        <a href="/" class="btn btn-primary">
                                            <i class="fa fa-arrow-circle-left fa-fw"></i> Continue Shopping
                                        </a>
                                        <a href="/checkout" class="btn btn-primary">
                                            Checkout <i class="fa fa-arrow-circle-right fa-fw"></i>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="py-5">
        <div class="container-fluid">
            <div class="row">
                @await Component.InvokeAsync("_FooterViewComponents")
            </div>
        </div>
    </footer>
    <script src="~/modules/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/modules/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="~/js/site.js"></script>
    <script src="/js/plugins.js"></script>

    <script>
        function updateCartTotal() {
            let total = 0;

            document.querySelectorAll('.total-price').forEach(priceElement => {
                const priceText = priceElement.innerText.replace('₺', '').trim();

                const price = parseFloat(priceText.replace(/\s+/g, '').replace(',', '.'));

                if (!isNaN(price)) {
                    total += price;
                }
            });

            const cartTotalElement = document.getElementById('cart-total');
            cartTotalElement.innerText = `₺${total.toFixed(2)}`;

            const orderTotalElement = document.getElementById('order-total');
            orderTotalElement.innerText = `₺${total.toFixed(2)}`;
        }

        document.querySelectorAll('.quantity').forEach(input => {
            input.addEventListener('input', function() {

                const productId = this.getAttribute('data-product-id');
                const quantity = parseInt(this.value, 10);
                const priceText = this.closest('tr').querySelector('td:nth-child(3)').innerText.replace('₺', '').trim();

                const price = parseFloat(priceText.replace(/\s+/g, '').replace(',', '.'));

                const totalPrice = (quantity * price).toFixed(2);

                const totalPriceElement = document.querySelector(`.total-price[data-product-id="${productId}"]`);
                totalPriceElement.innerText = `₺${totalPrice}`;

                updateCartTotal();
            });
        });
        updateCartTotal();

        function saveCartToSession() {
            const cartItems = [];

            document.querySelectorAll('.total-price').forEach(priceElement => {
                const productId = priceElement.getAttribute('data-product-id');
                const quantity = document.querySelector(`input[data-product-id="${productId}"]`).value;
                const price = priceElement.innerText.replace('₺', '').trim();
                cartItems.push({
                    productId: productId,
                    quantity: quantity,
                    price: price
                });
            });
            sessionStorage.setItem('cart', JSON.stringify(cartItems));
        }

        function loadCartFromSession() {
            const cart = JSON.parse(sessionStorage.getItem('cart'));
            if (cart) {
                cart.forEach(item => {
                    const quantityInput = document.querySelector(`input[data-product-id="${item.productId}"]`);
                    if (quantityInput) {
                        quantityInput.value = item.quantity;
                    }
                    const totalPriceElement = document.querySelector(`.total-price[data-product-id="${item.productId}"]`);
                    if (totalPriceElement) {
                        totalPriceElement.innerText = `₺${(item.quantity * parseFloat(item.price)).toFixed(2)}`;
                    }
                });
                updateCartTotal();
            }
        }

        document.querySelectorAll('.quantity').forEach(input => {
            input.addEventListener('input', function() {
                const productId = this.getAttribute('data-product-id');
                const quantity = parseInt(this.value, 10);
                const priceText = this.closest('tr').querySelector('td:nth-child(3)').innerText.replace('₺', '').trim();
                const price = parseFloat(priceText.replace(/\s+/g, '').replace(',', '.'));
                const totalPriceElement = document.querySelector(`.total-price[data-product-id="${productId}"]`);
                totalPriceElement.innerText = `₺${(quantity * price).toFixed(2)}`;
                saveCartToSession();
                updateCartTotal();
            });
        });

          function confirmDelete() {
            return confirm("Silmek istediğinizden emin misiniz?");
        }
    </script>

    <style>  
        #order-total {
            font-size: 1.5rem; 
            color: #d9534f; 
            font-weight: bold;
            text-transform: uppercase;
        }
        #name {
            font-size: 1.5rem;
            color: #d9534f; 
            font-weight: bold;
            text-transform: uppercase; 
        }
    </style>
</body>
</html>
